name: Build and Release Application

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-13
            arch: x86_64
          - os: macos-14
            arch: arm64
          - os: windows-latest
            arch: x86_64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # --- CHANGE 1: Switched to --onedir for macOS for reliability ---
      - name: Build macOS App with PyInstaller
        if: runner.os == 'macOS'
        # Using --onedir is more reliable for Tkinter apps on macOS
        run: pyinstaller --onedir --windowed --name "NHI-Converter-macOS-${{ matrix.arch }}" --hidden-import=numpy --target-arch ${{ matrix.arch }} fm_converter_gui.py

      # --- CHANGE 2: Added --hidden-import=numpy for Windows ---
      - name: Build Windows App with PyInstaller
        if: runner.os == 'Windows'
        run: pyinstaller --onefile --windowed --name "NHI-Converter-Windows" --hidden-import=numpy fm_converter_gui.py

      # --- CHANGE 3: Updated macOS compression to zip the entire folder ---
      - name: Compress for macOS
        if: runner.os == 'macOS'
        # This now zips the entire output folder from --onedir
        run: zip -r NHI-Converter-macOS-${{ matrix.arch }}.zip dist/NHI-Converter-macOS-${{ matrix.arch }}
      
      - name: Compress for Windows
        if: runner.os == 'Windows'
        run: Compress-Archive -Path dist/NHI-Converter-Windows.exe -DestinationPath NHI-Converter-Windows.zip

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: NHI-Converter-${{ matrix.os }}-${{ matrix.arch }}
          path: NHI-Converter-*.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          body_path: ''
          files: artifacts/*/*.zip